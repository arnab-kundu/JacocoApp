plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco' // TODO: STEP 1
}

// TODO: STEP 2
jacoco {
    toolVersion = "0.8.7"
}


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.arnab.jacocoapp"
        minSdk 25
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true // TODO: STEP 3
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // TODO: STEP 4
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            reports {
                junitXml.enabled = true
                html.enabled = true
            }
        }
    }
}

// TODO: STEP 5
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }

    def fileFilter = ['android/databinding/**/*.class',
                      '**/android/databinding/*Binding.class',
                      '**/android/databinding/*',
                      '**/androidx/databinding/*',
                      '**/BR.*',
                      '**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*Module_*Factory.class',
                      '**/di/module/*',
                      '**/*_Factory*.*',
                      '**/*Module*.*',
                      '**/*Dagger*.*',
                      '**/*Hilt*.*',
                      '**/*MapperImpl*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/BuildConfig.*',
                      '**/*Component*.*',
                      '**/*BR*.*',
                      '**/Manifest*.*',
                      '**/*$Lambda$*.*',
                      '**/*Companion*.*',
                      '**/*Module*.*',
                      '**/*Dagger*.*',
                      '**/*Hilt*.*',
                      '**/*MembersInjector*.*',
                      '**/*_MembersInjector.class',
                      '**/*_Factory*.*',
                      '**/*_Provide*Factory*.*',
                      '**/*Extensions*.*',
                      '**/*$Result.*',
                      '**/*$Result$*.*']

    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    //def mainSrc = fileTree(dir: "${projectDir}/src/main/java", excludes: fileFilter)
    def mainSrc = "${projectDir}/src/main/java"

    println(mainSrc)
    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree]))

    //def unitTestsData = "$project.buildDir/jacoco/testDebugUnitTest.exec"
    def unitTestsData = "$project.buildDir/jacoco/testReleaseUnitTest.exec"
    def androidTestsData = fileTree(dir: "${buildDir}/outputs/code_coverage/debugAndroidTest/connected/",
            includes: ["**/*.ec"])
    getExecutionData().setFrom(files([unitTestsData, androidTestsData]))

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}